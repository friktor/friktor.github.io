initSidebarItems({"enum":[["Appearance","Values for appearance styles properties"],["Case","What format of properties keys to use and check when parsing Current allowed: snake_case, camelCase, kebab-case or ignore case Default: camelCase"],["DimensionType",""],["Layout","Values for layout styles properties"],["ParseError","Errors associated with style parsing"],["ProcessingError","Errors associated with the finalized calculation of properties"],["PropertyError","Errors associated with the properties of style"],["PropertyParseType","Middleware enum with property type of current style field"],["PropertyValue","Values for union of appearance and layout"],["SharedUnit","Basic SharedUnit for unit based fields contains variant for exact value or runtime expression"],["SourceFormat","From what data format to parse, currently available: JSON, YAML Default: JSON"],["Variable","The value of the variable for calculations in runtime"]],"fn":[["get_reflect_property_type",""],["pair_to_flex","Convertor: create FlexStyle by property key and unit value"]],"mod":[["values","Values that you can using in setters"]],"struct":[["CollectedStyle",""],["Context","Context with other needed info - for parse and prepares, aka dimensions screen, element measures, variables, and other."],["DefaultParseMiddleware","Default context representation for Parsing Trait Trait `TParseMiddleware` implemented in jss_derive as proc-macro"],["DimensionsContext","Style dimensions context"],["ParseOptions","Options for parse style from uniform functions"],["Properties","All properties of styles of different types."],["PropertiesStore","Properties storage generic type"],["PropertyKeyInfo","Expanded info about property key - needed middleware, case, etc.."],["Style","Style element, with all element status, and context`s, with implementations of traits for parse unions of one element"],["StyleBuilder",""],["Stylesheet","Collection of styles"]],"type":[["PropertiesApperance","Link type for appearance `PropertiesStore`"],["PropertiesExpressions","Link type for calc expressions `PropertiesStore`"],["PropertiesLayout","Link type for layout `PropertiesStore`"]]});